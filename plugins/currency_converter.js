const _0x406084 = _0x1528;
(function(_0x223785, _0x30b9bc) {
 const _0x17ebb9 = _0x1528, _0xdc931c = _0x223785();
 while ( !! []) {
  try {
   const _0x554eff = parseInt(_0x17ebb9(0x1d2)) / 0x1 + -parseInt(_0x17ebb9(0x1db)) / 0x2 + -parseInt(_0x17ebb9(0x1d3)) / 0x3 + parseInt(_0x17ebb9(0x1e2)) / 0x4 + -parseInt(_0x17ebb9(0x1cf)) / 0x5 * (-parseInt(_0x17ebb9(0x1d0)) / 0x6) + -parseInt(_0x17ebb9(0x1d7)) / 0x7 + -parseInt(_0x17ebb9(0x1e0)) / 0x8;
   if (_0x554eff === _0x30b9bc) break;
   else _0xdc931c['push'](_0xdc931c['shift']());
  } catch (_0x410486) {
   _0xdc931c['push'](_0xdc931c['shift']());
  }
 }
}(_0x449b, 0xc69b7));

function _0x449b() {
 const _0x2c7d17 = ['1746426RtZlHs', '\x0a\x0a\x0a        \x0a\x0a> *ᴘᴏᴡᴇʀᴇᴅ ʙʏ ᴍɪᴢᴜᴋɪ ᴍᴅ*\x0a\x0a        ', '../command', '💸_*Currency Conversion*_💸\x0a\x0a', 'convert', '1132040UkflJM', 'Usage: .convert <amount> <from_currency> <to_currency>', '6447300rJfANx', 'rates', '../config', 'data', 'log', '6663470CURJDC', '6IptDsv', 'https://api.exchangerate-api.com/v4/latest/', '931165xvrfDd', '2344566EIodgh', '💵 *Amount*: ', 'axios', 'Convert an amount from one currency to another.', '8861643KQgYFI', '🔄 *Converted Amount*: ', ' not found.', 'get'];
 _0x449b = function() {
  return _0x2c7d17;
 };
 return _0x449b();
}
const axios = require(_0x406084(0x1d5)), config = require(_0x406084(0x1e4)), {
 cmd, commands
} = require(_0x406084(0x1dd));

function _0x1528(_0x1d99a2, _0x156480) {
 const _0x449bb7 = _0x449b();
 return _0x1528 = function(_0x1528b6, _0x5e0f16) {
  _0x1528b6 = _0x1528b6 - 0x1ce;
  let _0xf86094 = _0x449bb7[_0x1528b6];
  return _0xf86094;
 }, _0x1528(_0x1d99a2, _0x156480);
}
cmd({
 'pattern': _0x406084(0x1df),
 'desc': _0x406084(0x1d6),
 'category': _0x406084(0x1df),
 'react': '💱',
 'filename': __filename
}, async(_0x532b49, _0x598fef, _0x1c1c26, {
 from: _0x46af04,
 quoted: _0x4542ee,
 body: _0x53883d,
 isCmd: _0xeedcd6,
 command: _0x70e97,
 args: _0x16b8f0,
 q: _0x5d38e1,
 isGroup: _0x161e90,
 sender: _0x512e26,
 senderNumber: _0x474979,
 botNumber2: _0x4b0e31,
 botNumber: _0x23b2f6,
 pushname: _0x475152,
 isMe: _0x25b46a,
 isOwner: _0x5f3a19,
 groupMetadata: _0x369973,
 groupName: _0x5532e7,
 participants: _0x145bc0,
 groupAdmins: _0x52d3d9,
 isBotAdmins: _0x58ee95,
 isAdmins: _0x38f301,
 reply: _0x32404f
}) => {
 const _0x3eb2f4 = _0x406084;
 try {
  if (_0x16b8f0['length'] < 0x3) return _0x32404f(_0x3eb2f4(0x1e1));
  const _0x36a57c = _0x16b8f0[0x0], _0xd6cce3 = _0x16b8f0[0x1]['toUpperCase'](), _0x41ba2e = _0x16b8f0[0x2]['toUpperCase']();
  if (isNaN(_0x36a57c)) return _0x32404f('Please provide a valid amount.');
  const _0x4296f5 = _0x3eb2f4(0x1d1) + _0xd6cce3, _0x5742e5 = await axios[_0x3eb2f4(0x1da)](_0x4296f5), _0x9d506f = _0x5742e5[_0x3eb2f4(0x1e5)];
  if (!_0x9d506f['rates'][_0x41ba2e]) return _0x32404f('Conversion rate for ' + _0x41ba2e + _0x3eb2f4(0x1d9));
  const _0xe9925c = (_0x36a57c * _0x9d506f['rates'][_0x41ba2e])['toFixed'](0x2);
  let _0x561ab6 = _0x3eb2f4(0x1de);
  _0x561ab6 += _0x3eb2f4(0x1d4) + _0x36a57c + ' ' + _0xd6cce3 + '\x0a', _0x561ab6 += _0x3eb2f4(0x1d8) + _0xe9925c + ' ' + _0x41ba2e + '\x0a', _0x561ab6 += '📈 *Exchange Rate*: 1 ' + _0xd6cce3 + ' = ' + _0x9d506f[_0x3eb2f4(0x1e3)][_0x41ba2e] + ' ' + _0x41ba2e + _0x3eb2f4(0x1dc), await _0x532b49['sendMessage'](_0x46af04, {
   'text': _0x561ab6
  }, {
   'quoted': _0x598fef
  });
 } catch (_0x3115c4) {
  console[_0x3eb2f4(0x1ce)](_0x3115c4), _0x32404f('*Error Fetching Data*: ' + _0x3115c4['message']);
 }
});