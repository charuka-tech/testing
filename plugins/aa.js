const { cmd } = require('../command');
const sinhalasub = require('sinhalasub.lk');

cmd({
    pattern: "mv",
    desc: "download movies",
    category: "download",
    react: "üé•",
    filename: __filename
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        if (!q) return reply("*Please provide the movie name or titleüìç*");

        // Fetch movie data using sinhalasub.lk package
        const movie = await sinhalasub.lk(q);
        const data = movie.result;

        if (!data) return reply("Movie not found!");

        let desc = `‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ú®ùó†ùó¢ùó©ùóúùóò ùóóùó¢ùó™ùó°ùóüùó¢ùóîùóóùóòùó•‚ú®
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ  
 ‚û¢üìå ·¥õ…™·¥õ ü·¥á_* √∑ ${data.title}
 ‚û¢‚≠ê ùóúùó†ùóóùóØ_* √∑ ${data.imdb}
 ‚û¢üé¨ ùóñùóÆùòÅùó≤ùó¥ùóºùóøùòÜ_* √∑ ${data.category.join(', ')}
 ‚û¢üóìÔ∏è ùó•ùó≤ùóπùó≤ùóÆùòÄùó≤ ùóóùóÆùòÅùó≤_* √∑ ${data.date}
 ‚û¢üíª ùóóùó≤ùòÄùó∞ùóøùó∂ùóΩùòÅùó∂ùóºùóª_* √∑ ${data.description}

 Your Movie Download Request Uploading. You Can See The File In Document Format Below.
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ

> ·¥ò·¥è·¥°·¥á Ä·¥Ö  ô è ·¥ç…™·¥¢·¥ú·¥ã…™ ·¥ç·¥Ö
`;

        // Send movie details and image
        await conn.sendMessage(from, { image: { url: data.image }, caption: desc }, { quoted: mek });

        // Filter and prepare the 480p and 720p download options
        const downloadOptions = data.dl_links.filter(link => link.quality === "SD 480p" || link.quality === "HD 720p");

        for (const option of downloadOptions) {
            const downloadUrl = option.link;

            // Send the movie as a document with quality and size in the description
            await conn.sendMessage(from, {
                document: { url: downloadUrl },
                mimetype: "video/mp4",
                fileName: `${data.title} (${option.quality}).mp4`,
                caption: `> ·¥ç·¥Ä·¥Ö·¥á  ô è ·¥ç…™·¥¢·¥ú·¥ã…™ ·¥ç·¥Ö\n\nQuality: ${option.quality}\nSize: ${option.size}`
            }, { quoted: mek });
        }
    } catch (e) {
        reply(`${e}`);
    }
});
